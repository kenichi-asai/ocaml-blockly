var before = "open UniverseJs;;\nopen Color;;\nopen Image;;\nopen World;;\nopen Utility;;\n\ntype world_t = {\n  cat : int * int;\n  y : int;\n  down : bool;\n}\n";

/**
let f x =
  2 * x + 0
let a = 2
let b = 5
*/

var after = '\nlet catx = 0\nlet caty = 100\nlet input = f 0\nlet width = 600\nlet height = 600\nlet rec make_lines v3 v2 =\n  if v2 = 0 then v3\n  else make_lines (line [(width, 0)] (make_color 0 0 0 ~alpha:30) :: (line [(0, height)] (make_color 0 0 0 ~alpha:30) :: v3)) (v2 - 1)\nlet rec make_positions v5 v7 =\n  if v7 = 0 then v5\n  else make_positions ((300, v7 * 20) :: ((v7 * 20, 300) :: v5)) (v7 - 1)\nlet rec make_ladder v8 v10 =\n  if v10 = 0 then v8\n  else make_ladder (line [(30, 20)] Color.black :: v8) (v10 - 1)\nlet rec make_ladder_positions v v12 v13 =\n  if v12 = 0 then v\n  else (let x = v13 - (v12 * (35 / a) - 3)\n  in make_ladder_positions ((x, a * x) :: v) (v12 - 1) v13)\nlet draw_cat {cat = (x4, y5); y = y2_v; down = down2_v} v4 =\n  let d v6 =\n  List.map (let f (x3, y3) =\n  (x3 + 300, (300 - y3) - v6 * 20)\n  in f) (make_ladder_positions [((catx - 15) - (200 / a) / 2, a * catx - ((200 / a) * a) / 2); ((catx + 15) - (200 / a) / 2, a * catx - ((200 / a) * a) / 2); (0, 0)] 5 catx)\n  in (let e = make_ladder [line [(200 / a, 0 - (200 / a) * a)] Color.black; line [(200 / a, 0 - (200 / a) * a)] Color.black; line [(width, 0 - a * width)] (make_color 0 0 0 ~alpha:90)] 5\n  in (if down2_v then place_images e (d input) (place_image (read_image "https://4.bp.blogspot.com/-BpE6K5Fxoz8/XAY5oynltOI/AAAAAAABQdM/GBzM-1Fa2LwlTF3N0WXbOWYqibxCPnfPwCLcBGAs/s800/cat06_moyou_chatora.png" 120 120) (x4 + 280, 250 - y5) (place_image (polygon [(130, -5); (0, 20); (-130, -5)] (make_color 128 92 52)) (catx + 300, 300 - caty) (place_image (polygon [(130, 0); (-8, 100); (-120, 0)] Color.white) (catx + 300, 280 - caty) v4)))\n  else place_images e (d y2_v) v4))\nlet draw {cat = (x5, y4); y = y_v; down = down_v} =\n  place_images (make_lines [] 30) (make_positions [] 30) (place_image (line [(0, height)] Color.black) (width / 2, height / 2) (place_image (line [(width, 0)] Color.black) (width / 2, height / 2) (place_image (circle 3 (if down_v then make_color 255 0 120 ~alpha:0\n  else Color.cyan)) (x5 + 300, 300 - y4) (draw_cat {cat = (x5, y4); y = y_v; down = down_v} (place_image (read_image "https://3.bp.blogspot.com/-2VlXgRbFJzU/WzC9bcsGpjI/AAAAAAABM4k/NrTCHmilioMi2WvVfeb_iZusOzmUqw-qgCLcBGAs/s800/cat_tree_orirarenai.png" 200 200) (catx + 300, 320 - caty) (place_image (rectangle 42 100 (make_color 128 92 52)) (catx + 368, 450 - caty) (empty_scene width height)))))))\nlet on_tick {cat = (x2, y2); y = y; down = down} =\n  if down then {cat = (x2 - 20, y2 - a * 20); y = y - 1; down = down}\n  else if y = input then {cat = (x2, y2); y = 10 / a; down = true}\n  else {cat = (x2, y2); y = y + 1; down = down}\nlet stop {cat = cat_v; y = y3_v; down = down3_v} =\n  y3_v = input && input <> b || down3_v && y3_v = 0\nlet draw_last {cat = cat4_v; y = y6_v; down = down6_v} =\n  if down6_v then place_image (text "CLEAR" 30 Color.red) (300, 250) (draw {cat = cat4_v; y = y6_v; down = down6_v})\n  else if y6_v > b then place_image (text "通りすぎた..." 25 Color.red) (300, 250) (place_image (text "GAME OVER" 30 Color.red) (300, 300) (draw {cat = cat4_v; y = y6_v; down = down6_v}))\n  else place_image (text "届かなかった..." 25 Color.red) (300, 250) (place_image (text "GAME OVER" 30 Color.red) (300, 300) (draw {cat = cat4_v; y = y6_v; down = down6_v}))\n;; big_bang {cat = (catx, caty); y = 0; down = false}\n  ~width:width\n  ~height:height\n  ~to_draw:draw\n  ~on_tick:on_tick\n  ~stop_when:stop\n  ~to_draw_last:draw_last\n  ~onload:false;;\n'; 


